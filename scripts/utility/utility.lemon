define char.animation_bs.sprite	= u8[A0 + 0x60]	// Currently shown animation sprite

global u8 bluespheres.ring.timer	// Ring timerrate
global u8 bluespheres.ring.framerate	// Ring framerate animation

//@ Function taken from sonic3air_dev/scripts/standalone/enginecallbacks.lemon
function void Init()
{
	// We will show a warning about the need to disable the ASSETS mod if it is active
	assert(!Mods.isModActive("Blue Spheres Costumer - ASSETS"), "Please, disable the 'Blue Spheres Costumer - ASSETS' mod. This is included only to simplify the process of creating a mod, and is not necessary for causal use, and may cause compatibility issues.")
	
	// Call the base function
	base.Init()
}

//? Устанавливает статус главного персонажа и кадры анимации для расширенного фреймрейта.
function void BlueSphereCostumer.fn2da449()
{
	// Character standing
	if !(bluespheres.started_running)
	{
		// Set character state
		char.state = char.state.STANDING
		
		// Setup frames
		char.animation_bs.sprite = 0x00
	}
	
	// Character running
	if (bluespheres.started_running)
	{
		// Set character state
		char.state = char.state.RUNNING
		
		// Setup frames
		if (bluespheres.movement_speed < 0x00) // If the speed of movement is negative, convert into positive
			u16[A0 + 0x60] += 0x00 - (bluespheres.movement_speed >> 0x05)
		else if (bluespheres.movement_speed != 0x00) // If the speed of movement is not 0, then the speed of animations depends on the speed of movement
			u16[A0 + 0x60] += bluespheres.movement_speed >> 0x05
	}
	
	// Character jump
	if (u8[0xffffe432] & 0x80)
	{
		// Set character state
		char.state = char.state.ROLLING
		
		// Setup frames
		if (bluespheres.movement_speed < 0x00) // If the speed of movement is negative, convert into positive
			u16[A0 + 0x60] += 0x00 - (bluespheres.movement_speed >> 0x05)
		else if (bluespheres.movement_speed != 0x00) // If the speed of movement is not 0, then the speed of animations depends on the speed of movement
			u16[A0 + 0x60] += bluespheres.movement_speed >> 0x05
		else // Otherwise use the speed set
			u16[A0 + 0x60] += 4096 >> 0x05
	}
	
	BlueSphereCostumer.fn2da450()
}

//? Устанавливает статус второго персонажа и кадры анимации для расширенного фреймрейта.
function void BlueSphereCostumer.fncc4253()
{
	// Character standing
	if !(bluespheres.started_running)
	{
		// Set character state
		char.state = char.state.STANDING
		
		// Setup frames
		char.animation_bs.sprite = 0x00
	}
	
	// Character running
	if (bluespheres.started_running)
	{
		// Set character state
		char.state = char.state.RUNNING
		
		// Setup frames
		if (bluespheres.movement_speed < 0x00) // If the speed of movement is negative, convert into positive
			u16[A0 + 0x60] += 0x00 - (bluespheres.movement_speed >> 0x05)
		else if (bluespheres.movement_speed != 0x00) // If the speed of movement is not 0, then the speed of animations depends on the speed of movement
			u16[A0 + 0x60] += bluespheres.movement_speed >> 0x05
	}
	
	// Character jump
	if (u8[0xffffe440] != 0x00)
	{
		// Set character state
		char.state = char.state.ROLLING
		
		// Setup frames
		if (bluespheres.movement_speed < 0x00) // If the speed of movement is negative, convert into positive
			u16[A0 + 0x60] += 0x00 - (bluespheres.movement_speed >> 0x05)
		else if (bluespheres.movement_speed != 0x00) // If the speed of movement is not 0, then the speed of animations depends on the speed of movement
			u16[A0 + 0x60] += bluespheres.movement_speed >> 0x05
		else // Otherwise use the speed set
			u16[A0 + 0x60] += 4096 >> 0x05
	}
	
	BlueSphereCostumer.fn2da450()
}

//? Устанавливает лимит по количеству кадров анимаций для расширенного фреймрейта персонажей.
function void BlueSphereCostumer.fn2da450()
{
	D0 = char.animation_bs.sprite
	if (D0.u8 >= 0x0c)
		D0.u8 = 0x00
	
	char.animation_bs.sprite = D0.u8
}

//? Устанавливает кадры анимации для расширенного фреймрейта хвоста второго персонажа.
function void BlueSphereCostumer.fn8abca6()
{
	// Setup frames
	if (bluespheres.movement_speed == 2048) // If you have collected all the spheres, then use the initial speed
		u16[A0 + 0x60] += (4096 - (4096 >> 0x02)) >> 0x05
	else if (bluespheres.current_gamespeed < 0x00) // If the speed of movement is negative, convert into positive
		u16[A0 + 0x60] += 0x00 - ((bluespheres.current_gamespeed - (bluespheres.current_gamespeed >> 0x02)) >> 0x05) 
	else if (bluespheres.current_gamespeed != 0x00) // If the speed of movement is not 0, then the speed of animations depends on the speed of movement
		u16[A0 + 0x60] += (bluespheres.current_gamespeed - (bluespheres.current_gamespeed >> 0x02)) >> 0x05
	else // Otherwise use the initial speed
		u16[A0 + 0x60] += (4096 - (4096 >> 0x02)) >> 0x05
		
	BlueSphereCostumer.fn8abca7()
}

//? Устанавливает лимит по количеству кадров анимаций для расширенного фреймрейта хвоста второго персонажа.
function void BlueSphereCostumer.fn8abca7()
{
	D0 = char.animation_bs.sprite
	if (D0.u8 >= 0x15)
		D0.u8 = 0x00
	
	char.animation_bs.sprite = D0.u8 
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x00903e) end(0x00919e)
function void fn00903e()
{
	BlueSphereCostumer.fn2da449()
	
	// Call the base function
	base.fn00903e()
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x009402) end(0x009442)
function void fn009402()
{
	BlueSphereCostumer.fncc4253()
	
	// Call the base function
	base.fn009402()
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x009488) end(0x0094d2)
function void fn009488()
{
	BlueSphereCostumer.fn8abca6()
	
	// Call the base function
	base.fn009488()
} 

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x008faa) end(0x009038)
function void fn008faa()
{
	base.fn008faa() // Call the base function
	objA0.value32 += getScreenHeight() - 224
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x009212) end(0x009274)
function void fn009212()
{
	base.fn009212() // Call the base function
	objA0.value32 += getScreenHeight() - 224
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x009444) end(0x009482)
function void fn009444()
{
	base.fn009444() // Call the base function
	objA0.value32 += getScreenHeight() - 224
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x00972e) end(0x0098ae)
function void fn00972e()
{
	// Determine which sphere is in front of us
	A1 = 0xfffff100
	D0.u16 = ((bluespheres.position.x + 0x80) >> 0x08) & 0x1f
	D1.u16 = ((bluespheres.position.y + 0x80) >> 0x08) & 0x1f
	D1.u16 <<= 0x05
	D1.u8 |= D0.u8
	A1 += D1.s16
	D2.u8 = u8[A1]
	
	// Ring sphere
	if (D2.u8 == 0x04)
	{
		// Check if you are inside the ring now, then collect it. Like a Sonic Mania
		D0.u16 = (bluespheres.position.x | bluespheres.position.y) & 0xe0
		if (D0.u16 == 0x00)
		{
			// Call the base function
			base.fn00972e()
		}
	}
	// If it's not a ring, then call the base function for compatibility with other mods that make changes here
	else
	{
		// Call the base function
		base.fn00972e()
	}
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x009d9e) end(0x009dc8)
function void fn009d9e()
{
	// Setup
	++bluespheres.ring.timer
	if (bluespheres.ring.timer >= 0x1e)
		bluespheres.ring.timer = 0x00
	
	bluespheres.ring.framerate = bluespheres.ring.timer >> 0x01
	//debugLog(stringformat("Ring framerate: %d", bluespheres.ring.framerate))
	
	// Call the base function
	base.fn009d9e()
}
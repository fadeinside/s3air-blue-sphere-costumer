//@ Function taken from sonic3air_dev/scripts/standalone/enginecallbacks.lemon
function void Init()
{
	// We will show a warning about the need to disable the ASSETS mod if it is active
	assert(!Mods.isModActive("Blue Spheres Sprite Mod Support - ASSETS"), "Please, disable the 'Blue Spheres Sprite Mod Support - ASSETS' mod. This is included only to simplify the process of creating a mod, and is not necessary for causal use, and may cause compatibility issues.")
	
	// Call the base function
	base.Init()
}

//? Sets the state of the main character and animation frames for the extended framerate.
function void SpheresModSupport.SetupFramerate_MainCharacter()
{
	// Character standing
	if (!bluespheres.started_running && !(u8[0xffffe432] & 0x80))
	{
		// Set character state
		char.state = char.state.STANDING
		
		// Setup frames
		char.animation_bs.sprite = 0x00
	}
	
	// Character running
	if (bluespheres.started_running && !(u8[0xffffe432] & 0x80))
	{
		// Set character state
		char.state = char.state.RUNNING
		
		// Setup frames
		if (bluespheres.movement_speed < 0x00) // If the speed of movement is negative, convert into positive
			u16[A0 + 0x60] += (0x00 - bluespheres.movement_speed) >> 0x05
		else if (bluespheres.movement_speed != 0x00) // If the speed of movement is not 0, then the speed of animations depends on the speed of movement
			u16[A0 + 0x60] += bluespheres.movement_speed >> 0x05
	}
	
	// Character jump
	if (u8[0xffffe432] & 0x80)
	{
		// Set character state
		char.state = char.state.ROLLING
		
		// Setup frames
		if (bluespheres.movement_speed < 0x00) // If the speed of movement is negative, convert into positive
			u16[A0 + 0x60] += (0x00 - bluespheres.movement_speed) >> 0x05
		else if (bluespheres.movement_speed != 0x00) // If the speed of movement is not 0, then the speed of animations depends on the speed of movement
			u16[A0 + 0x60] += bluespheres.movement_speed >> 0x05
		else // Otherwise use the initial speed
			u16[A0 + 0x60] += 0x1000 >> 0x05
	}
	
	SpheresModSupport.SetupFramerateLimit_Characters()
}

//? Sets the state of the second character and the animation frames for the extended framerate.
function void SpheresModSupport.SetupFramerate_SecondCharacter()
{
	// Character standing
	if (!bluespheres.started_running && !(u8[0xffffe440] & 0x80))
	{
		// Set character state
		char.state = char.state.STANDING
		
		// Setup frames
		char.animation_bs.sprite = 0x00
	}
	
	// Character running
	if (bluespheres.started_running && !(u8[0xffffe440] & 0x80))
	{
		// Set character state
		char.state = char.state.RUNNING
		
		// Setup frames
		if (bluespheres.movement_speed < 0x00) // If the speed of movement is negative, convert into positive
			u16[A0 + 0x60] += (0x00 - bluespheres.movement_speed) >> 0x05
		else if (bluespheres.movement_speed != 0x00) // If the speed of movement is not 0, then the speed of animations depends on the speed of movement
			u16[A0 + 0x60] += bluespheres.movement_speed >> 0x05
	}
	
	// Character jump
	if (u8[0xffffe440] & 0x80)
	{
		// Set character state
		char.state = char.state.ROLLING
		
		// Setup frames
		if (bluespheres.movement_speed < 0x00) // If the speed of movement is negative, convert into positive
			u16[A0 + 0x60] += (0x00 - bluespheres.movement_speed) >> 0x05
		else if (bluespheres.movement_speed != 0x00) // If the speed of movement is not 0, then the speed of animations depends on the speed of movement
			u16[A0 + 0x60] += bluespheres.movement_speed >> 0x05
		else // Otherwise use the initial speed
			u16[A0 + 0x60] += 0x1000 >> 0x05
	}
	
	SpheresModSupport.SetupFramerateLimit_Characters()
}

//? Sets an animation frame limit for the extended character framerate.
function void SpheresModSupport.SetupFramerateLimit_Characters()
{
	D0 = char.animation_bs.sprite
	if (D0.u8 >= 0x0c)
		D0.u8 = 0x00
	
	char.animation_bs.sprite = D0.u8
	
	//debugLog(stringformat("Character state: 0x%02x", char.state))
	//debugLog(stringformat("Character frames: %d", char.animation_bs.sprite))
	//debugLog(stringformat("Current movespeed: %d", bluespheres.movement_speed))
}

//? Sets the animation frames for the extended tail frame of the second character.
function void SpheresModSupport.SetupFramerate_TailObject()
{
	// Variables
	u16 bluespheres.faded_speed = (bluespheres.current_gamespeed >> 0x02)
	
	// Setup frames
	if (bluespheres.movement_speed == 2048) // If you have collected all the spheres, then use the initial speed
		u16[A0 + 0x60] += (0x1000 - (0x1000 >> 0x02)) >> 0x05
	else if (bluespheres.current_gamespeed < 0x00) // If the speed of movement is negative, convert into positive
		u16[A0 + 0x60] += (0x00 - (bluespheres.current_gamespeed - bluespheres.faded_speed)) >> 0x05
	else if (bluespheres.current_gamespeed != 0x00) // If the speed of movement is not 0, then the speed of animations depends on the speed of movement
		u16[A0 + 0x60] += (bluespheres.current_gamespeed - bluespheres.faded_speed) >> 0x05
	else // Otherwise use the initial speed
		u16[A0 + 0x60] += (0x1000 - (0x1000 >> 0x02)) >> 0x05
	
	SpheresModSupport.SetupFramerateLimit_TailObject()
}

//? Sets an animation frame limit for the extended tail frame of the second character.
function void SpheresModSupport.SetupFramerateLimit_TailObject()
{
	D0 = char.animation_bs.sprite
	if (D0.u8 >= 0x15)
		D0.u8 = 0x00
	
	char.animation_bs.sprite = D0.u8
	
	//debugLog(stringformat("Tails frames: %d", char.animation_bs.sprite))
	//debugLog(stringformat("Faded gamespeed: %d", bluespheres.current_gamespeed >> 0x02))
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x00903e) end(0x00919e)
function void fn00903e()
{
	SpheresModSupport.SetupFramerate_MainCharacter()
	
	// Call the base function
	base.fn00903e()
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x009402) end(0x009442)
function void fn009402()
{
	SpheresModSupport.SetupFramerate_SecondCharacter()
	
	// Call the base function
	base.fn009402()
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x009488) end(0x0094d2)
function void fn009488()
{
	SpheresModSupport.SetupFramerate_TailObject()
	
	// Call the base function
	base.fn009488()
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x008faa) end(0x009038)
function void fn008faa()
{
	base.fn008faa() // Call the base function
	objA0.value32 += getScreenHeight() - 224
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x009212) end(0x009274)
function void fn009212()
{
	base.fn009212() // Call the base function
	objA0.value32 += getScreenHeight() - 224
}

//@ Function taken from sonic3air_dev/scripts/level/special/bluespheres.lemon
//# address-hook(0x009444) end(0x009482)
function void fn009444()
{
	// Unload the Tails object of the character if it's not Miles
	if ((getMainCharacter() || getSecondCharacter()) != CHARACTER_TAILS)
	{
		UnloadObject()
		return
	}
	
	base.fn009444() // Call the base function
	objA0.value32 += getScreenHeight() - 224
}